// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "hobaduy"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/playlist": {
            "get": {
                "description": "Get playlists",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlist"
                ],
                "summary": "Get playlists",
                "operationId": "get-playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Playlist"
                        }
                    }
                }
            },
            "post": {
                "description": "Post playlist",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlist"
                ],
                "summary": "Post playlist",
                "operationId": "post-playlist",
                "parameters": [
                    {
                        "description": "playlist",
                        "name": "playlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PlaylistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Playlist"
                        }
                    }
                }
            }
        },
        "/playlist/{id}": {
            "get": {
                "description": "Get playlist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlist"
                ],
                "summary": "Get playlist by id",
                "operationId": "get-playlist-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Playlist"
                        }
                    }
                }
            },
            "put": {
                "description": "Put playlist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlist"
                ],
                "summary": "Put playlist by id",
                "operationId": "put-playlist",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "playlist",
                        "name": "playlist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.PlaylistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Playlist"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete playlist by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "playlist"
                ],
                "summary": "Delete playlist by id",
                "operationId": "Delete-playlist-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Playlist ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Playlist"
                        }
                    }
                }
            }
        },
        "/track": {
            "get": {
                "description": "Get tracks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Get tracks",
                "operationId": "get-track",
                "parameters": [
                    {
                        "type": "string",
                        "description": "title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "artist",
                        "name": "artist",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "album",
                        "name": "album",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "genre",
                        "name": "genre",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Track"
                        }
                    }
                }
            },
            "post": {
                "description": "Post tracks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Post tracks",
                "operationId": "post-track",
                "parameters": [
                    {
                        "description": "track",
                        "name": "track",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TrackRequest"
                        }
                    },
                    {
                        "type": "file",
                        "description": "mp3_file",
                        "name": "mp3_file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Track"
                        }
                    }
                }
            }
        },
        "/track/{id}": {
            "get": {
                "description": "Get track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Get track by id",
                "operationId": "get-track-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Track"
                        }
                    }
                }
            },
            "put": {
                "description": "Put track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Put track by id",
                "operationId": "put-track",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "track",
                        "name": "track",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TrackRequest"
                        }
                    },
                    {
                        "type": "file",
                        "description": "mp3_file",
                        "name": "mp3_file",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Track"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "Delete track by id",
                "operationId": "Delete-track-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Track"
                        }
                    }
                }
            }
        },
        "/track/{id}/download": {
            "get": {
                "description": "download track by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "track"
                ],
                "summary": "download track by id",
                "operationId": "download-track-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Track ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Track"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Playlist": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "playback_mode": {
                    "description": "'priority' or 'random'",
                    "type": "string"
                },
                "track_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrackIds"
                    }
                }
            }
        },
        "model.PlaylistRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "playback_mode": {
                    "type": "string"
                },
                "track_ids": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.TrackIds"
                    }
                }
            }
        },
        "model.Track": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "genre": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "mp3_file": {
                    "type": "string"
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "model.TrackIds": {
            "type": "object",
            "properties": {
                "priority": {
                    "type": "integer"
                },
                "track_id": {
                    "type": "string"
                }
            }
        },
        "model.TrackRequest": {
            "type": "object",
            "properties": {
                "album": {
                    "type": "string"
                },
                "artist": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "genre": {
                    "type": "string"
                },
                "release_year": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "Music API",
	Description:      "This is a sample music API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
